@model  VastVoyages.Model.Entities.Employee


@{
    ViewBag.Title = "Edit Employee";
    Layout = "~/Views/Shared/_NavTemplate.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container" style="width: 95%; margin-top: 5%; max-width:60% ">
        <div class="form-horizontal">
            <h2>Edit Employee : @Model.EmployeeId</h2>
            <hr />
            @if (Model.Errors.Count > 0)
            {
                <div class="text-danger">
                    <ul>
                        @foreach (var e in Model.Errors
                        .Where(err => err.ErrorType == VastVoyages.Types.ErrorType.Business))
                        {
                            <li>@e.Description</li>
                        }
                        @foreach (var e in Model.Errors
                        .Where(err => err.ErrorType == VastVoyages.Types.ErrorType.Model))
                        {
                            <li>@e.Description</li>
                        }
                    </ul>
                </div>
            }
            @Html.HiddenFor(model => model.EmployeeId)
            @Html.HiddenFor(model => model.RecordVersion)
            @Html.HiddenFor(model => model.FirstName)
            @Html.HiddenFor(model => model.LastName)
            @Html.HiddenFor(model => model.SIN)
            @Html.HiddenFor(model => model.DateOfBirth)
            @Html.HiddenFor(model => model.Email)

            <div class="form-group">
                @Html.LabelFor(model => model.WorkPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.WorkPhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WorkPhone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CellPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CellPhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CellPhone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Province, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    @if (Model.Country == "Canada")
                    {
                        @Html.DropDownListFor(x => x.Province, new List<SelectListItem>
                        {
                            new SelectListItem() {Text = "Alberta", Value="AB"},
                            new SelectListItem() {Text = "British Columbia", Value="BC"},
                            new SelectListItem() {Text = "Manitoba", Value="MB"},
                            new SelectListItem() {Text = "Newfoundland and Labrador", Value="NL"},
                            new SelectListItem() {Text = "New Brunswick", Value="NB"},
                            new SelectListItem() {Text = "Northwest Territories", Value="NT"},
                            new SelectListItem() {Text = "Nova Scotia", Value="NS"},
                            new SelectListItem() {Text = "Nunavut", Value="NU"},
                            new SelectListItem() {Text = "Ontario", Value="ON"},
                            new SelectListItem() {Text = "Prince Edward Island", Value="PE"},
                            new SelectListItem() {Text = "Quebec", Value="QC"},
                            new SelectListItem() {Text = "Saskatchewan", Value="SK"},
                            new SelectListItem() {Text = "Yukon", Value="YT"},
                           
                   }, new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.DropDownListFor(x => x.Province, new List<SelectListItem>
                    {
                        new SelectListItem() {Text="Alabama", Value="AL"},
                        new SelectListItem() { Text="Alaska", Value="AK"},
                        new SelectListItem() { Text="Arizona", Value="AZ"},
                        new SelectListItem() { Text="Arkansas", Value="AR"},
                        new SelectListItem() { Text="California", Value="CA"},
                        new SelectListItem() { Text="Colorado", Value="CO"},
                        new SelectListItem() { Text="Connecticut", Value="CT"},
                        new SelectListItem() { Text="District of Columbia", Value="DC"},
                        new SelectListItem() { Text="Delaware", Value="DE"},
                        new SelectListItem() { Text="Florida", Value="FL"},
                        new SelectListItem() { Text="Georgia", Value="GA"},
                        new SelectListItem() { Text="Hawaii", Value="HI"},
                        new SelectListItem() { Text="Idaho", Value="ID"},
                        new SelectListItem() { Text="Illinois", Value="IL"},
                        new SelectListItem() { Text="Indiana", Value="IN"},
                        new SelectListItem() { Text="Iowa", Value="IA"},
                        new SelectListItem() { Text="Kansas", Value="KS"},
                        new SelectListItem() { Text="Kentucky", Value="KY"},
                        new SelectListItem() { Text="Louisiana", Value="LA"},
                        new SelectListItem() { Text="Maine", Value="ME"},
                        new SelectListItem() { Text="Maryland", Value="MD"},
                        new SelectListItem() { Text="Massachusetts", Value="MA"},
                        new SelectListItem() { Text="Michigan", Value="MI"},
                        new SelectListItem() { Text="Minnesota", Value="MN"},
                        new SelectListItem() { Text="Mississippi", Value="MS"},
                        new SelectListItem() { Text="Missouri", Value="MO"},
                        new SelectListItem() { Text="Montana", Value="MT"},
                        new SelectListItem() { Text="Nebraska", Value="NE"},
                        new SelectListItem() { Text="Nevada", Value="NV"},
                        new SelectListItem() { Text="New Hampshire", Value="NH"},
                        new SelectListItem() { Text="New Jersey", Value="NJ"},
                        new SelectListItem() { Text="New Mexico", Value="NM"},
                        new SelectListItem() { Text="New York", Value="NY"},
                        new SelectListItem() { Text="North Carolina", Value="NC"},
                        new SelectListItem() { Text="North Dakota", Value="ND"},
                        new SelectListItem() { Text="Ohio", Value="OH"},
                        new SelectListItem() { Text="Oklahoma", Value="OK"},
                        new SelectListItem() { Text="Oregon", Value="OR"},
                        new SelectListItem() { Text="Pennsylvania", Value="PA"},
                        new SelectListItem() { Text="Rhode Island", Value="RI"},
                        new SelectListItem() { Text="South Carolina", Value="SC"},
                        new SelectListItem() { Text="South Dakota", Value="SD"},
                        new SelectListItem() { Text="Tennessee", Value="TN"},
                        new SelectListItem() { Text="Texas", Value="TX"},
                        new SelectListItem() { Text="Utah", Value="UT"},
                        new SelectListItem() { Text="Vermont", Value="VT"},
                        new SelectListItem() { Text="Virginia", Value="VA"},
                        new SelectListItem() { Text="Washington", Value="WA"},
                        new SelectListItem() { Text="West Virginia", Value="WV"},
                        new SelectListItem() { Text="Wisconsin", Value="WI"},
                        new SelectListItem() { Text="Wyoming", Value="WY"}
                        }, new { @class = "form-control" })
                    }

                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.Country, new List<SelectListItem>
                    {
                        new SelectListItem() {Text = "Canada", Value="Canada"},
                        new SelectListItem() {Text = "United States Of America", Value="United States Of America"},
                    }, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-info" />
                </div>
            </div>
        </div>

        @* hide for non-hr employees *@
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

    </div>
}

